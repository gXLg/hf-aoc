#69 <= 12

<= lib:io/readall

^1 <= ^0

^0 <=
^0 => 1 <= 10
^0 => 2 <= ^1
<= lib:str/split

#1 <= ^0 => 1
#2 <= #1
#3 <=
^1 <=

!1
  ^1 => #3 <= ^0 => (#3 + 3)
  #3 <= #3 + 1
  #1 <= #1 - 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !1

:: amount of strings
#1 <= #2

^2 <=
^3 <=

:: setup flags
#4 <=
!2
  ^2 => #4 <= 1
  ^3 => #4 <= 1
  #4 <= #4 + 1
  #1 <= #1 - 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !2

:: running for most common

#1 <= #69
:: bit number
#3 <=
!3
  :: counter
  #5 <=

  :: find out the most common
  #7 <= #2
  #6 <=
  !4
    :: if already unchecked, skip to next
    #10 <= ^2 => #6
    #0 <= #0 + (1 - #10 / #10) * 4

    #8 <= (^1 => #6 => #3) - 48
    #0 <= #0 + (#8 / #8)
    #5 <= #5 + 2
    #5 <= #5 - 1

    #6 <= #6 + 1
    #7 <= #7 - 1
    #0 <= #0 + (1 - #7 / #7)
    #0 <= !4

  :: set value
  ^0 <=
  ^0 => 1 <= -#5
  <= lib:math/isneg
  #5 <= (1 - ^0 => 1) + 48

  :: counter
  #9 <=

  :: filter, lol
  #7 <= #2
  #6 <=

  !5
    :: if already unchecked, skip to next
    #10 <= ^2 => #6
    #0 <= #0 + (1 - #10 / #10) * 6

    #8 <= ^1 => #6 => #3
    #8 <= #8 - #5
    #0 <= #0 + (#8 / #8) * 2
      #9 <= #9 + 1
    #0 <= #0 + 1
      ^2 => #6 <= 0

    #6 <= #6 + 1
    #7 <= #7 - 1
    #0 <= #0 + (1 - #7 / #7)
    #0 <= !5

  #3 <= #3 + 1
  #1 <= #1 - 1
  #0 <= #0 + (1 - #1 / #1) * 3
  #9 <= #9 - 1
  #0 <= #0 + (1 - #9 / #9)
  #0 <= !3

#4 <=
!6
  #1 <= ^2 => #4
  #0 <= #0 + (#1 / #1) * 2
  #4 <= #4 + 1
  #0 <= !6

^4 <= ^1 => #4


:: running for least common

#1 <= #69
:: bit number
#3 <=
!7
  :: counter
  #5 <=

  :: find out the most common
  #7 <= #2
  #6 <=
  !8
    :: if already unchecked, skip to next
    #10 <= ^3 => #6
    #0 <= #0 + (1 - #10 / #10) * 4

    #8 <= (^1 => #6 => #3) - 48
    #0 <= #0 + (#8 / #8)
    #5 <= #5 + 2
    #5 <= #5 - 1

    #6 <= #6 + 1
    #7 <= #7 - 1
    #0 <= #0 + (1 - #7 / #7)
    #0 <= !8

  :: set value
  ^0 <=
  ^0 => 1 <= -#5
  <= lib:math/isneg
  #5 <= (^0 => 1) + 48

  :: counter
  #9 <=

  :: filter, lol
  #7 <= #2
  #6 <=

  !9
    :: if already unchecked, skip to next
    #10 <= ^3 => #6
    #0 <= #0 + (1 - #10 / #10) * 6

    #8 <= ^1 => #6 => #3
    #8 <= #8 - #5
    #0 <= #0 + (#8 / #8) * 2
      #9 <= #9 + 1
    #0 <= #0 + 1
      ^3 => #6 <= 0

    #6 <= #6 + 1
    #7 <= #7 - 1
    #0 <= #0 + (1 - #7 / #7)
    #0 <= !9

  #3 <= #3 + 1
  #1 <= #1 - 1
  #0 <= #0 + (1 - #1 / #1) * 3
  #9 <= #9 - 1
  #0 <= #0 + (1 - #9 / #9)
  #0 <= !7

#4 <=
!10
  #1 <= ^3 => #4
  #0 <= #0 + (#1 / #1) * 2
  #4 <= #4 + 1
  #0 <= !10

^5 <= ^1 => #4

::^0 <= ^4
::<= lib:io/puts
::&1 <= 32
::^0 <= ^5
::<= lib:io/puts

:: transform
#4 <=
#5 <=

#1 <= #69
#2 <= 1
!11
  #1 <= #1 - 1

  #4 <= #4 + (^4 => #1 - 48) * #2
  #5 <= #5 + (^5 => #1 - 48) * #2
  #2 <= #2 * 2

  #0 <= #0 + (1 - #1 / #1)
  #0 <= !11

^0 <=
^0 => 1 <= #4 * #5
<= lib:io/putnat
