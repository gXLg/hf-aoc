<= lib:io/readall

^1 <= ^0

^0 <=
^0 => 1 <= '\n'
^0 => 2 <= ^1
<= lib:str/split

#1 <= ^0 => 1
#2 <= #1
#3 <=
^1 <=

!1
  ^1 => #3 <= ^0 => (#3 + 3)
  #3 <= #3 + 1
  #1 <= #1 - 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !1
:: amount of strings is in #2

^0 <= "begin parsing\n"
<= lib:io/puts

:: list of all vent lines coordinates
^2 <=

#1 <= #2
#3 <=
!2
  ^0 <=
  ^0 => 1 <= '>'
  ^0 => 2 <= ^1 => #3
  <= lib:str/split
  ^3 <= ^0 => 3
  ^4 <= ^0 => 4

  ^2 => #3 <=

  ^0 <=
  ^0 => 1 <= ^3
  ^0 => 2 <= 0
  ^0 => 3 <= 2
  <= lib:str/slice

  ^3 <= ^0
  ^0 <=
  ^0 => 1 <= ','
  ^0 => 2 <= ^3
  <= lib:str/split

  ^3 <=
  ^3 => 0 <= ^0 => 3
  ^3 => 1 <= ^0 => 4

  ^0 <= ^3 => 0
  <= lib:math/froms
  ^2 => #3 => 0 <= ^0 => 1

  ^0 <= ^3 => 1
  <= lib:math/froms
  ^2 => #3 => 1 <= ^0 => 1


  ^0 <=
  ^0 => 1 <= ^4
  ^0 => 2 <= 1
  ^0 => 3 <= 0
  <= lib:str/slice
  ^4 <= ^0
  ^0 <=
  ^0 => 1 <= ','
  ^0 => 2 <= ^4
  <= lib:str/split
  ^4 <=
  ^4 => 0 <= ^0 => 3
  ^4 => 1 <= ^0 => 4

  ^0 <= ^4 => 0
  <= lib:math/froms
  ^2 => #3 => 2 <= ^0 => 1

  ^0 <= ^4 => 1
  <= lib:math/froms
  ^2 => #3 => 3 <= ^0 => 1

  #1 <= #1 - 1
  #3 <= #3 + 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !2

:: max x
#5 <=
:: max y
#6 <=

^0 <= "begin border count\n"
<= lib:io/puts
:: getting the max values dattebayo
#1 <= #2
#3 <=
!3
  :: watch for x1
  ^0 <=
  ^0 => 1 <= #5 + 1
  ^0 => 2 <= ^2 => #3 => 0 + 1
  <= lib:math/geqnat
  #0 <= #0 + ^0 => 1
    #5 <= ^2 => #3 => 0

  :: watch for x2
  ^0 <=
  ^0 => 1 <= #5 + 1
  ^0 => 2 <= ^2 => #3 => 2 + 1
  <= lib:math/geqnat
  #0 <= #0 + ^0 => 1
    #5 <= ^2 => #3 => 2

  :: watch for y1
  ^0 <=
  ^0 => 1 <= #6 + 1
  ^0 => 2 <= ^2 => #3 => 1 + 1
  <= lib:math/geqnat
  #0 <= #0 + ^0 => 1
    #6 <= ^2 => #3 => 1

  :: watch for y2
  ^0 <=
  ^0 => 1 <= #6 + 1
  ^0 => 2 <= ^2 => #3 => 3 + 1
  <= lib:math/geqnat
  #0 <= #0 + ^0 => 1
    #6 <= ^2 => #3 => 3

  #1 <= #1 - 1
  #3 <= #3 + 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !3

:: field of vent lines
^3 <=

^0 <= "begin field init\n"
<= lib:io/puts
:: setting all the field to 0, lol
#1 <= #6 + 1
#3 <=
!4

  ^3 => #3 <=

  #8 <= #5 + 1
  #9 <=
  !5
    ^3 => #3 => #9 <= 0

    #8 <= #8 - 1
    #9 <= #9 + 1
    #0 <= #0 + (1 - #8 / #8)
    #0 <= !5


  #1 <= #1 - 1
  #3 <= #3 + 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !4


^0 <= "begin executing\n"
<= lib:io/puts
:: counting vents
#1 <= #2
#3 <=
!6

  #4 <= (^2 => #3 => 0) - (^2 => #3 => 2)
  :: if equal then pipe y
  #0 <= #0 + (1 - #4 / #4)
  #0 <= !7

    ^0 <=
    ^0 => 1 <= ^2 => #3 => 1
    ^0 => 2 <= ^2 => #3 => 3
    <= lib:math/geqnat
    #7 <= ^0 => 1
    :: if second is greater
    #0 <= #0 + (#7 / #7) * 3
      #7 <= ^2 => #3 => 1
      #8 <= ^2 => #3 => 3
    :: else
    #0 <= #0 + 2
      #7 <= ^2 => #3 => 3
      #8 <= ^2 => #3 => 1

    :: walk and increase
    #9 <= #8 - #7 + 1
      #9 <= #9 - 1
      #10 <= ^3 => (#9 + #7) => (^2 => #3 => 0)
      ^3 => (#9 + #7) => (^2 => #3 => 0) <= #10 + 1
      #0 <= #0 - (#9 / #9) * 4

    #0 <= !8
  !7
  #4 <= (^2 => #3 => 1) - (^2 => #3 => 3)
  :: if equal then pipe x
  #0 <= #0 + (1 - #4 / #4)
  #0 <= !8

    ^0 <=
    ^0 => 1 <= ^2 => #3 => 0
    ^0 => 2 <= ^2 => #3 => 2
    <= lib:math/geqnat
    #7 <= ^0 => 1
    :: if second is greater
    #0 <= #0 + (#7 / #7) * 3
      #7 <= ^2 => #3 => 0
      #8 <= ^2 => #3 => 2
    :: else
    #0 <= #0 + 2
      #7 <= ^2 => #3 => 2
      #8 <= ^2 => #3 => 0

    :: walk and increase
    #9 <= #8 - #7 + 1
      #9 <= #9 - 1
      #10 <= ^3 => (^2 => #3 => 1) => (#9 + #7)
      ^3 => (^2 => #3 => 1) => (#9 + #7) <= #10 + 1
      #0 <= #0 - (#9 / #9) * 4

  !8

  #1 <= #1 - 1
  #3 <= #3 + 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !6

:: vents count
#69 <=

^0 <= "begin adding\n"
<= lib:io/puts
:: walking over field
#1 <= #6 + 1
#3 <=
!9

  #2 <= #5 + 1
  #4 <=
  !10

    ^0 <=
    ^0 => 1 <= ^3 => #3 => #4
    ^0 => 2 <= 2
    <= lib:math/geqnat
    #69 <= #69 + ^0 => 1

    #2 <= #2 - 1
    #4 <= #4 + 1
    #0 <= #0 + (1 - #2 / #2)
    #0 <= !10

  #1 <= #1 - 1
  #3 <= #3 + 1
  #0 <= #0 + (1 - #1 / #1)
  #0 <= !9

^0 <=
^0 => 1 <= #69
<= lib:io/putnat
