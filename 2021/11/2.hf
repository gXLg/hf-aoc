<= lib:io/readall
^1 <= ^0

^0 <=
^0 => 1 <= '\n'
^0 => 2 <= ^1
<= lib:str/split

:: putting up the table, cuz we know it's 10x10
^1 <=
#1 <=
!1
  ^1 => #1 <=
  ^1 => #1 => -1 <= 0
  ^1 => #1 => 10 <= 0
  #2 <=
  !2
    ^1 => #1 => #2 <= (^0 => (#1 + 3) => #2) - '0'

    #2 <= #2 + 1
    #0 <= #0 + 1 - (#2 - 10) / (#2 - 10)
    #0 <= !2

  #1 <= #1 + 1
  #0 <= #0 + 1 - (#1 - 10) / (#1 - 10)
  #0 <= !1

:: and two additional rows
^1 => -1 <=
^1 => 10 <=

#1 <= -1
!3
  ^1 => -1 => #1 <= 0
  ^1 => 10 => #1 <= 0
  #1 <= #1 + 1
  #0 <= #0 + 1 - (#1 - 11) / (#1 - 11)
  #0 <= !3


:: just repeat
#1 <= 1
!4

  ^0 <=
  ^0 => 1 <= #1
  <= lib:io/putnat
  &1 <= '\n'

  :: increase all by one
  #2 <=
  !5
    #3 <=
    !6
      ^1 => #2 => #3 <= ^1 => #2 => #3 + 1

      #3 <= #3 + 1
      #0 <= #0 + 1 - (#3 - 10) / (#3 - 10)
      #0 <= !6

    #2 <= #2 + 1
    #0 <= #0 + 1 - (#2 - 10) / (#2 - 10)
    #0 <= !5

  :: repeat as long as changes
  :: setting to -1 if already increased the neighbours
  !9
    #5 <= 1

    #2 <=
    !7
      #3 <=
      !8
        #4 <= ^1 => #2 => #3

        :: if already -1, then skip
        #0 <= !(79 + 1 - (#4 + 1) / (#4 + 1))

        !79

        ^0 <=
        ^0 => 1 <= #4 + 1
        ^0 => 2 <= 10 + 1
        <= lib:math/geqnat

        :: if greater than 9, set to -1 and inc neighbours
        #0 <= !(80 + ^0 => 1)
        !81
          #5 <=

          ^1 => #2 => #3 <= -1

          #4 <= ^1 => (#2 - 1) => (#3 - 1)
          ^1 => (#2 - 1) => (#3 - 1) <= #4 + (#4 + 1) / (#4 + 1)

          #4 <= ^1 => #2 => (#3 - 1)
          ^1 => #2 => (#3 - 1) <= #4 + (#4 + 1) / (#4 + 1)

          #4 <= ^1 => (#2 + 1) => (#3 - 1)
          ^1 => (#2 + 1) => (#3 - 1) <= #4 + (#4 + 1) / (#4 + 1)


          #4 <= ^1 => (#2 - 1) => #3
          ^1 => (#2 - 1) => #3 <= #4 + (#4 + 1) / (#4 + 1)

          #4 <= ^1 => (#2 + 1) => #3
          ^1 => (#2 + 1) => #3 <= #4 + (#4 + 1) / (#4 + 1)


          #4 <= ^1 => (#2 - 1) => (#3 + 1)
          ^1 => (#2 - 1) => (#3 + 1) <= #4 + (#4 + 1) / (#4 + 1)

          #4 <= ^1 => #2 => (#3 + 1)
          ^1 => #2 => (#3 + 1) <= #4 + (#4 + 1) / (#4 + 1)

          #4 <= ^1 => (#2 + 1) => (#3 + 1)
          ^1 => (#2 + 1) => (#3 + 1) <= #4 + (#4 + 1) / (#4 + 1)

        !80

        #3 <= #3 + 1
        #0 <= #0 + 1 - (#3 - 10) / (#3 - 10)
        #0 <= !8

      #2 <= #2 + 1
      #0 <= #0 + 1 - (#2 - 10) / (#2 - 10)
      #0 <= !7

    #0 <= #0 + #5 / #5
    #0 <= !9

  #69 <=
  #2 <=
  !10
    #3 <=
    !11
      :: if -1, then increase 69
      #4 <= ^1 => #2 => #3
      #0 <= #0 + 2 * (#4 + 1) / (#4 + 1)
        #69 <= #69 + 1
        ^1 => #2 => #3 <= 0

      #3 <= #3 + 1
      #0 <= #0 + 1 - (#3 - 10) / (#3 - 10)
      #0 <= !11

    #2 <= #2 + 1
    #0 <= #0 + 1 - (#2 - 10) / (#2 - 10)
    #0 <= !10

  #0 <= #0 + (#69 - 100) / (#69 - 100)
  #0 <= !69

  #1 <= #1 + 1
  #0 <= !4

!69

^0 <=
^0 => 1 <= #1
<= lib:io/putnat
